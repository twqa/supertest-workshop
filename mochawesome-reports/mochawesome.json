{
  "reportTitle": "supertest-workshop",
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2016-08-10T09:06:42.502Z",
    "end": "2016-08-10T09:06:53.786Z",
    "duration": 11284,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Test Google Books API",
        "suites": [
          {
            "title": "Test Google Books - Volumes API",
            "suites": [],
            "tests": [
              {
                "title": "Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
                "timedOut": false,
                "duration": 857,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br>            request<br>                .get(<span class=\"hljs-string\">'?q=test'</span>)<br>                .expect(<span class=\"hljs-number\">200</span>,done)",
                "isRoot": false,
                "uuid": "f3bdb913-5600-4307-8daa-0476cbea094b",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              },
              {
                "title": "Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
                "timedOut": false,
                "duration": 942,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"check\"</span>)<br><span class=\"hljs-comment\">//request = request(endpoint +'/volumes')</span><br>request.get(<span class=\"hljs-string\">'/'</span>)<br>    .query({ q: <span class=\"hljs-string\">' cucumber'</span> ,MaxResult:<span class=\"hljs-number\">2</span>})<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         id = res.body.items[<span class=\"hljs-number\">0</span>].id<br>       expect(res.body.items[<span class=\"hljs-number\">0</span>].id).to.equal(<span class=\"hljs-string\">'0dge3Xh6EjUC'</span>)<br>    }).end(done)",
                "isRoot": false,
                "uuid": "3b86a4ac-426d-492d-9609-93994e650d7f",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              },
              {
                "title": "Retrieves a Volume resource based on ID that is from last case - Return 200",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Retrieves a Volume resource based on ID that is from last case - Return 200",
                "timedOut": false,
                "duration": 430,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br>            request.get(<span class=\"hljs-string\">'/'</span> + id)<br>                .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>                    expect(res.body.id).to.equal(id)<br>                })<br>                .end(done)<br>            <span class=\"hljs-comment\">//or</span><br>            <span class=\"hljs-comment\">//    .end(function(res){</span><br>            <span class=\"hljs-comment\">//        expect(res.body.id).to.equal(id)</span><br>            <span class=\"hljs-comment\">//        done()</span><br>            <span class=\"hljs-comment\">//    })</span>",
                "isRoot": false,
                "uuid": "dc19487a-23b5-40bf-a600-681f243c7d1a",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/supertest-workshop_books.js",
            "uuid": "a89cd624-9b63-4189-aa42-1b537c146c06",
            "fullFile": "/Users/ppyao/yaopingping/QASpace/apiSuperTest/supertest-workshop/test/supertest-workshop_books.js",
            "passes": [
              {
                "title": "Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
                "timedOut": false,
                "duration": 857,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br>            request<br>                .get(<span class=\"hljs-string\">'?q=test'</span>)<br>                .expect(<span class=\"hljs-number\">200</span>,done)",
                "isRoot": false,
                "uuid": "f3bdb913-5600-4307-8daa-0476cbea094b",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              },
              {
                "title": "Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
                "timedOut": false,
                "duration": 942,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"check\"</span>)<br><span class=\"hljs-comment\">//request = request(endpoint +'/volumes')</span><br>request.get(<span class=\"hljs-string\">'/'</span>)<br>    .query({ q: <span class=\"hljs-string\">' cucumber'</span> ,MaxResult:<span class=\"hljs-number\">2</span>})<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         id = res.body.items[<span class=\"hljs-number\">0</span>].id<br>       expect(res.body.items[<span class=\"hljs-number\">0</span>].id).to.equal(<span class=\"hljs-string\">'0dge3Xh6EjUC'</span>)<br>    }).end(done)",
                "isRoot": false,
                "uuid": "3b86a4ac-426d-492d-9609-93994e650d7f",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              },
              {
                "title": "Retrieves a Volume resource based on ID that is from last case - Return 200",
                "fullTitle": "Test Google Books API Test Google Books - Volumes API Retrieves a Volume resource based on ID that is from last case - Return 200",
                "timedOut": false,
                "duration": 430,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br>            request.get(<span class=\"hljs-string\">'/'</span> + id)<br>                .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>                    expect(res.body.id).to.equal(id)<br>                })<br>                .end(done)<br>            <span class=\"hljs-comment\">//or</span><br>            <span class=\"hljs-comment\">//    .end(function(res){</span><br>            <span class=\"hljs-comment\">//        expect(res.body.id).to.equal(id)</span><br>            <span class=\"hljs-comment\">//        done()</span><br>            <span class=\"hljs-comment\">//    })</span>",
                "isRoot": false,
                "uuid": "dc19487a-23b5-40bf-a600-681f243c7d1a",
                "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2229
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/supertest-workshop_books.js",
        "uuid": "56b64e8a-5dc1-48e3-8320-f47ef87d462b",
        "fullFile": "/Users/ppyao/yaopingping/QASpace/apiSuperTest/supertest-workshop/test/supertest-workshop_books.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "GOOGLE SHEETS API",
        "suites": [],
        "tests": [
          {
            "title": "Add a new sheet -YaoPingping",
            "fullTitle": "GOOGLE SHEETS API Add a new sheet -YaoPingping",
            "timedOut": false,
            "duration": 2101,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>        <span class=\"hljs-keyword\">var</span> singleSheetBody = {<br>            <span class=\"hljs-string\">\"requests\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                        <span class=\"hljs-string\">\"properties\"</span>: {<br>                            <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769723\"</span>,<br>                            <span class=\"hljs-string\">\"title\"</span>: titleName,<br>                            <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                                <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                                <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                            },<br>                            <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                                <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                                <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                                <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                            }<br>                        }<br>                    }<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(singleSheetBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                deleteId = res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.sheetId<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>                expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "5aca633e-9e37-4438-926c-09e46cce53cc",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Add multiple sheets - ppyao & pingping1",
            "fullTitle": "GOOGLE SHEETS API Add multiple sheets - ppyao & pingping1",
            "timedOut": false,
            "duration": 1664,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br><span class=\"hljs-keyword\">var</span> requestBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769724\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName1,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }, {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769725\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName2,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(requestBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName1)<br>        expect(res.body.replies[<span class=\"hljs-number\">1</span>].addSheet.properties.title).to.equal(titleName2)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "3efb549f-db25-403e-8fbf-07990bf13453",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Add a content to single range",
            "fullTitle": "GOOGLE SHEETS API Add a content to single range",
            "timedOut": false,
            "duration": 1513,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">8000</span>)<br>request.put(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>    .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(singleBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.updatedRange).to.equal(dataRange)<br>        expect(res.body.updatedRows).to.equal(<span class=\"hljs-number\">4</span>)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "2c2ddcb4-b646-466b-93c0-1907345ae565",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "retrieve data from single range",
            "fullTitle": "GOOGLE SHEETS API retrieve data from single range",
            "timedOut": false,
            "duration": 1450,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "request.get(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body).to.eql(singleBody)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "217a65ed-a2fa-4958-b59c-1ed1d00f724b",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Write to multiple ranges",
            "fullTitle": "GOOGLE SHEETS API Write to multiple ranges",
            "timedOut": false,
            "duration": 1630,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> requestBody = {<br>            <span class=\"hljs-string\">\"data\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"pingping1!A5:C5\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"pingping\"</span>, <span class=\"hljs-string\">\"female\"</span>, <span class=\"hljs-string\">\"11/11/1990\"</span>]<br>                    ]<br>                },<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"ppyao!A1:C2\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"Cost\"</span>, <span class=\"hljs-string\">\"Stocked\"</span>, <span class=\"hljs-string\">\"Ship Date\"</span>],<br>                        [<span class=\"hljs-string\">\"$20.50\"</span>, <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"3/1/2016\"</span>]<br>                    ]<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values:batchUpdate'</span>)<br>            .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(requestBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body.responses[<span class=\"hljs-number\">0</span>].updatedRange).to.equal(<span class=\"hljs-string\">'pingping1!A5:C5'</span>)<br>                expect(res.body.responses[<span class=\"hljs-number\">1</span>].updatedRange).to.equal(<span class=\"hljs-string\">'ppyao!A1:C2'</span>)<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "d04c12f4-0c9c-4168-96ac-22b6cda040de",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "delete a sheet by ID",
            "fullTitle": "GOOGLE SHEETS API delete a sheet by ID",
            "timedOut": false,
            "duration": 683,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> deleteBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"deleteSheet\"</span>: {<br>                <span class=\"hljs-string\">\"sheetId\"</span>: deleteId<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(deleteBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "47fee3a6-3b17-4d5b-b01d-175e089175ed",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/supertest_workshop_sheet.js",
        "uuid": "875670cf-798b-4315-8531-7314d3fa2f5a",
        "fullFile": "/Users/ppyao/yaopingping/QASpace/apiSuperTest/supertest-workshop/test/supertest_workshop_sheet.js",
        "passes": [
          {
            "title": "Add a new sheet -YaoPingping",
            "fullTitle": "GOOGLE SHEETS API Add a new sheet -YaoPingping",
            "timedOut": false,
            "duration": 2101,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>        <span class=\"hljs-keyword\">var</span> singleSheetBody = {<br>            <span class=\"hljs-string\">\"requests\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                        <span class=\"hljs-string\">\"properties\"</span>: {<br>                            <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769723\"</span>,<br>                            <span class=\"hljs-string\">\"title\"</span>: titleName,<br>                            <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                                <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                                <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                            },<br>                            <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                                <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                                <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                                <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                            }<br>                        }<br>                    }<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(singleSheetBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                deleteId = res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.sheetId<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>                expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "5aca633e-9e37-4438-926c-09e46cce53cc",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Add multiple sheets - ppyao & pingping1",
            "fullTitle": "GOOGLE SHEETS API Add multiple sheets - ppyao & pingping1",
            "timedOut": false,
            "duration": 1664,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br><span class=\"hljs-keyword\">var</span> requestBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769724\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName1,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }, {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769725\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName2,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(requestBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName1)<br>        expect(res.body.replies[<span class=\"hljs-number\">1</span>].addSheet.properties.title).to.equal(titleName2)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "3efb549f-db25-403e-8fbf-07990bf13453",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Add a content to single range",
            "fullTitle": "GOOGLE SHEETS API Add a content to single range",
            "timedOut": false,
            "duration": 1513,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">8000</span>)<br>request.put(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>    .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(singleBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.updatedRange).to.equal(dataRange)<br>        expect(res.body.updatedRows).to.equal(<span class=\"hljs-number\">4</span>)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "2c2ddcb4-b646-466b-93c0-1907345ae565",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "retrieve data from single range",
            "fullTitle": "GOOGLE SHEETS API retrieve data from single range",
            "timedOut": false,
            "duration": 1450,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "request.get(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body).to.eql(singleBody)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "217a65ed-a2fa-4958-b59c-1ed1d00f724b",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "Write to multiple ranges",
            "fullTitle": "GOOGLE SHEETS API Write to multiple ranges",
            "timedOut": false,
            "duration": 1630,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> requestBody = {<br>            <span class=\"hljs-string\">\"data\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"pingping1!A5:C5\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"pingping\"</span>, <span class=\"hljs-string\">\"female\"</span>, <span class=\"hljs-string\">\"11/11/1990\"</span>]<br>                    ]<br>                },<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"ppyao!A1:C2\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"Cost\"</span>, <span class=\"hljs-string\">\"Stocked\"</span>, <span class=\"hljs-string\">\"Ship Date\"</span>],<br>                        [<span class=\"hljs-string\">\"$20.50\"</span>, <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"3/1/2016\"</span>]<br>                    ]<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values:batchUpdate'</span>)<br>            .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(requestBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body.responses[<span class=\"hljs-number\">0</span>].updatedRange).to.equal(<span class=\"hljs-string\">'pingping1!A5:C5'</span>)<br>                expect(res.body.responses[<span class=\"hljs-number\">1</span>].updatedRange).to.equal(<span class=\"hljs-string\">'ppyao!A1:C2'</span>)<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>            }).end(done)",
            "isRoot": false,
            "uuid": "d04c12f4-0c9c-4168-96ac-22b6cda040de",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          },
          {
            "title": "delete a sheet by ID",
            "fullTitle": "GOOGLE SHEETS API delete a sheet by ID",
            "timedOut": false,
            "duration": 683,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> deleteBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"deleteSheet\"</span>: {<br>                <span class=\"hljs-string\">\"sheetId\"</span>: deleteId<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(deleteBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>    }).end(done)",
            "isRoot": false,
            "uuid": "47fee3a6-3b17-4d5b-b01d-175e089175ed",
            "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 9041
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d5c52fcb-12e8-4a0d-94bc-5df5cf9a1ef8",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
      "fullTitle": "Test Google Books - Volumes API Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
      "timedOut": false,
      "duration": 857,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br>            request<br>                .get(<span class=\"hljs-string\">'?q=test'</span>)<br>                .expect(<span class=\"hljs-number\">200</span>,done)",
      "isRoot": false,
      "uuid": "76631108-a018-42c2-ae15-dd106ca10f7e",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
      "fullTitle": "Test Google Books - Volumes API Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
      "timedOut": false,
      "duration": 942,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"check\"</span>)<br><span class=\"hljs-comment\">//request = request(endpoint +'/volumes')</span><br>request.get(<span class=\"hljs-string\">'/'</span>)<br>    .query({ q: <span class=\"hljs-string\">' cucumber'</span> ,MaxResult:<span class=\"hljs-number\">2</span>})<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         id = res.body.items[<span class=\"hljs-number\">0</span>].id<br>       expect(res.body.items[<span class=\"hljs-number\">0</span>].id).to.equal(<span class=\"hljs-string\">'0dge3Xh6EjUC'</span>)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "e31179a4-9e73-49b0-8254-7a899110dbe8",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Retrieves a Volume resource based on ID that is from last case - Return 200",
      "fullTitle": "Test Google Books - Volumes API Retrieves a Volume resource based on ID that is from last case - Return 200",
      "timedOut": false,
      "duration": 430,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br>            request.get(<span class=\"hljs-string\">'/'</span> + id)<br>                .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>                    expect(res.body.id).to.equal(id)<br>                })<br>                .end(done)<br>            <span class=\"hljs-comment\">//or</span><br>            <span class=\"hljs-comment\">//    .end(function(res){</span><br>            <span class=\"hljs-comment\">//        expect(res.body.id).to.equal(id)</span><br>            <span class=\"hljs-comment\">//        done()</span><br>            <span class=\"hljs-comment\">//    })</span>",
      "isRoot": false,
      "uuid": "21a404e3-c95d-4133-9e80-e9848bf62e64",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Add a new sheet -YaoPingping",
      "fullTitle": "GOOGLE SHEETS API Add a new sheet -YaoPingping",
      "timedOut": false,
      "duration": 2101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>        <span class=\"hljs-keyword\">var</span> singleSheetBody = {<br>            <span class=\"hljs-string\">\"requests\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                        <span class=\"hljs-string\">\"properties\"</span>: {<br>                            <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769723\"</span>,<br>                            <span class=\"hljs-string\">\"title\"</span>: titleName,<br>                            <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                                <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                                <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                            },<br>                            <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                                <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                                <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                                <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                            }<br>                        }<br>                    }<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(singleSheetBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                deleteId = res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.sheetId<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>                expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "39e4930f-36ea-4405-85c3-c29fc91ebd29",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Add multiple sheets - ppyao & pingping1",
      "fullTitle": "GOOGLE SHEETS API Add multiple sheets - ppyao & pingping1",
      "timedOut": false,
      "duration": 1664,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br><span class=\"hljs-keyword\">var</span> requestBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769724\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName1,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }, {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769725\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName2,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(requestBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName1)<br>        expect(res.body.replies[<span class=\"hljs-number\">1</span>].addSheet.properties.title).to.equal(titleName2)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "24052747-b6ea-4b31-912e-80a6db08e46f",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Add a content to single range",
      "fullTitle": "GOOGLE SHEETS API Add a content to single range",
      "timedOut": false,
      "duration": 1513,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">8000</span>)<br>request.put(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>    .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(singleBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.updatedRange).to.equal(dataRange)<br>        expect(res.body.updatedRows).to.equal(<span class=\"hljs-number\">4</span>)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "9d0aae1c-f329-41ab-9252-bcd8ea58e8b3",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "retrieve data from single range",
      "fullTitle": "GOOGLE SHEETS API retrieve data from single range",
      "timedOut": false,
      "duration": 1450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.get(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body).to.eql(singleBody)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "e2388504-4414-489e-aea4-c79baecaf809",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Write to multiple ranges",
      "fullTitle": "GOOGLE SHEETS API Write to multiple ranges",
      "timedOut": false,
      "duration": 1630,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> requestBody = {<br>            <span class=\"hljs-string\">\"data\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"pingping1!A5:C5\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"pingping\"</span>, <span class=\"hljs-string\">\"female\"</span>, <span class=\"hljs-string\">\"11/11/1990\"</span>]<br>                    ]<br>                },<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"ppyao!A1:C2\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"Cost\"</span>, <span class=\"hljs-string\">\"Stocked\"</span>, <span class=\"hljs-string\">\"Ship Date\"</span>],<br>                        [<span class=\"hljs-string\">\"$20.50\"</span>, <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"3/1/2016\"</span>]<br>                    ]<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values:batchUpdate'</span>)<br>            .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(requestBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body.responses[<span class=\"hljs-number\">0</span>].updatedRange).to.equal(<span class=\"hljs-string\">'pingping1!A5:C5'</span>)<br>                expect(res.body.responses[<span class=\"hljs-number\">1</span>].updatedRange).to.equal(<span class=\"hljs-string\">'ppyao!A1:C2'</span>)<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "dc0d13d9-241e-4d26-9789-cd245f419068",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "delete a sheet by ID",
      "fullTitle": "GOOGLE SHEETS API delete a sheet by ID",
      "timedOut": false,
      "duration": 683,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> deleteBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"deleteSheet\"</span>: {<br>                <span class=\"hljs-string\">\"sheetId\"</span>: deleteId<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(deleteBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "b85de78b-809e-418f-993e-15d54c9e1f0a",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
      "fullTitle": "Test Google Books - Volumes API Search books with a mandatory parameter(q=\"test\") - Return 200 OK",
      "timedOut": false,
      "duration": 857,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br>            request<br>                .get(<span class=\"hljs-string\">'?q=test'</span>)<br>                .expect(<span class=\"hljs-number\">200</span>,done)",
      "isRoot": false,
      "uuid": "3631e3bd-3fbc-4acb-909f-b6ae171e569c",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
      "fullTitle": "Test Google Books - Volumes API Search books with name parameter(q=\"cucumber\") and ) - Return 200 ok",
      "timedOut": false,
      "duration": 942,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"check\"</span>)<br><span class=\"hljs-comment\">//request = request(endpoint +'/volumes')</span><br>request.get(<span class=\"hljs-string\">'/'</span>)<br>    .query({ q: <span class=\"hljs-string\">' cucumber'</span> ,MaxResult:<span class=\"hljs-number\">2</span>})<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>         id = res.body.items[<span class=\"hljs-number\">0</span>].id<br>       expect(res.body.items[<span class=\"hljs-number\">0</span>].id).to.equal(<span class=\"hljs-string\">'0dge3Xh6EjUC'</span>)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "a8563ea4-c5f4-44b5-b187-487e8af5585a",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Retrieves a Volume resource based on ID that is from last case - Return 200",
      "fullTitle": "Test Google Books - Volumes API Retrieves a Volume resource based on ID that is from last case - Return 200",
      "timedOut": false,
      "duration": 430,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">80000</span>)<br>            request.get(<span class=\"hljs-string\">'/'</span> + id)<br>                .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>                    expect(res.body.id).to.equal(id)<br>                })<br>                .end(done)<br>            <span class=\"hljs-comment\">//or</span><br>            <span class=\"hljs-comment\">//    .end(function(res){</span><br>            <span class=\"hljs-comment\">//        expect(res.body.id).to.equal(id)</span><br>            <span class=\"hljs-comment\">//        done()</span><br>            <span class=\"hljs-comment\">//    })</span>",
      "isRoot": false,
      "uuid": "750d260e-4a83-4e0a-8cce-d449f74bf8c5",
      "parentUUID": "a89cd624-9b63-4189-aa42-1b537c146c06",
      "skipped": false
    },
    {
      "title": "Add a new sheet -YaoPingping",
      "fullTitle": "GOOGLE SHEETS API Add a new sheet -YaoPingping",
      "timedOut": false,
      "duration": 2101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>        <span class=\"hljs-keyword\">var</span> singleSheetBody = {<br>            <span class=\"hljs-string\">\"requests\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                        <span class=\"hljs-string\">\"properties\"</span>: {<br>                            <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769723\"</span>,<br>                            <span class=\"hljs-string\">\"title\"</span>: titleName,<br>                            <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                                <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                                <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                            },<br>                            <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                                <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                                <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                                <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                            }<br>                        }<br>                    }<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(singleSheetBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                deleteId = res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.sheetId<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>                expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "66e0137f-4cb4-4772-8096-c45c1f179273",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Add multiple sheets - ppyao & pingping1",
      "fullTitle": "GOOGLE SHEETS API Add multiple sheets - ppyao & pingping1",
      "timedOut": false,
      "duration": 1664,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>)<br><span class=\"hljs-keyword\">var</span> requestBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769724\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName1,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }, {<br>            <span class=\"hljs-string\">\"addSheet\"</span>: {<br>                <span class=\"hljs-string\">\"properties\"</span>: {<br>                    <span class=\"hljs-string\">\"sheetId\"</span>: <span class=\"hljs-string\">\"1688769725\"</span>,<br>                    <span class=\"hljs-string\">\"title\"</span>: titleName2,<br>                    <span class=\"hljs-string\">\"gridProperties\"</span>: {<br>                        <span class=\"hljs-string\">\"rowCount\"</span>: <span class=\"hljs-number\">20</span>,<br>                        <span class=\"hljs-string\">\"columnCount\"</span>: <span class=\"hljs-number\">12</span><br>                    },<br>                    <span class=\"hljs-string\">\"tabColor\"</span>: {<br>                        <span class=\"hljs-string\">\"red\"</span>: <span class=\"hljs-number\">1.0</span>,<br>                        <span class=\"hljs-string\">\"green\"</span>: <span class=\"hljs-number\">0.3</span>,<br>                        <span class=\"hljs-string\">\"blue\"</span>: <span class=\"hljs-number\">0.4</span><br>                    }<br>                }<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(requestBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>)</span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.replies[<span class=\"hljs-number\">0</span>].addSheet.properties.title).to.equal(titleName1)<br>        expect(res.body.replies[<span class=\"hljs-number\">1</span>].addSheet.properties.title).to.equal(titleName2)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "082d813e-257b-4b62-8fb4-c549cf906a7e",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Add a content to single range",
      "fullTitle": "GOOGLE SHEETS API Add a content to single range",
      "timedOut": false,
      "duration": 1513,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">8000</span>)<br>request.put(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>    .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(singleBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>        expect(res.body.updatedRange).to.equal(dataRange)<br>        expect(res.body.updatedRows).to.equal(<span class=\"hljs-number\">4</span>)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "19442b40-44cd-4c1d-9ab6-2420604d4531",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "retrieve data from single range",
      "fullTitle": "GOOGLE SHEETS API retrieve data from single range",
      "timedOut": false,
      "duration": 1450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.get(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values/'</span> + dataRange)<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body).to.eql(singleBody)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "95a7f065-43fe-4da6-a4d2-a3dfa6b1864b",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "Write to multiple ranges",
      "fullTitle": "GOOGLE SHEETS API Write to multiple ranges",
      "timedOut": false,
      "duration": 1630,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> requestBody = {<br>            <span class=\"hljs-string\">\"data\"</span>: [<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"pingping1!A5:C5\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"pingping\"</span>, <span class=\"hljs-string\">\"female\"</span>, <span class=\"hljs-string\">\"11/11/1990\"</span>]<br>                    ]<br>                },<br>                {<br>                    <span class=\"hljs-string\">\"range\"</span>: <span class=\"hljs-string\">\"ppyao!A1:C2\"</span>,<br>                    <span class=\"hljs-string\">\"majorDimension\"</span>: <span class=\"hljs-string\">\"ROWS\"</span>,<br>                    <span class=\"hljs-string\">\"values\"</span>: [<br>                        [<span class=\"hljs-string\">\"Cost\"</span>, <span class=\"hljs-string\">\"Stocked\"</span>, <span class=\"hljs-string\">\"Ship Date\"</span>],<br>                        [<span class=\"hljs-string\">\"$20.50\"</span>, <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"3/1/2016\"</span>]<br>                    ]<br>                }<br>            ]<br>        }<br>        request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">'/values:batchUpdate'</span>)<br>            .query({valueInputOption: <span class=\"hljs-string\">'USER_ENTERED'</span>})<br>            .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>            .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>            .send(requestBody)<br>            .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>                expect(res.body.responses[<span class=\"hljs-number\">0</span>].updatedRange).to.equal(<span class=\"hljs-string\">'pingping1!A5:C5'</span>)<br>                expect(res.body.responses[<span class=\"hljs-number\">1</span>].updatedRange).to.equal(<span class=\"hljs-string\">'ppyao!A1:C2'</span>)<br>                expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>            }).end(done)",
      "isRoot": false,
      "uuid": "f6447e15-781b-4283-af3d-cbac4cce34f2",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    },
    {
      "title": "delete a sheet by ID",
      "fullTitle": "GOOGLE SHEETS API delete a sheet by ID",
      "timedOut": false,
      "duration": 683,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> deleteBody = {<br>    <span class=\"hljs-string\">\"requests\"</span>: [<br>        {<br>            <span class=\"hljs-string\">\"deleteSheet\"</span>: {<br>                <span class=\"hljs-string\">\"sheetId\"</span>: deleteId<br>            }<br>        }<br>    ]<br>}<br>request.post(<span class=\"hljs-string\">'/'</span> + spreadsheetId + <span class=\"hljs-string\">':batchUpdate'</span>)<br>    .set(<span class=\"hljs-string\">'Authorization'</span>, accessToken)<br>    .set(<span class=\"hljs-string\">'Content-Type'</span>, jsonType)<br>    .send(deleteBody)<br>    .expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">res</span>) </span>{<br>        expect(res.body.spreadsheetId).to.equal(spreadsheetId)<br>    }).end(done)",
      "isRoot": false,
      "uuid": "a610dc6a-cba8-4565-b4a5-03dc3161af49",
      "parentUUID": "875670cf-798b-4315-8531-7314d3fa2f5a",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}